{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicebus_Connection_Name": {
      "type": "string",
      "defaultValue": ""
    },
    "servicebus_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Service Bus Connection String"
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "defaultValue": ""
    },
    "workflows_ap_process_wu_logicapp_name": {
      "type": "string",
      "minLength": 1,
      "defaultValue": ""
    },
    "aadaudience_variable": {
      "defaultValue": "",
      "type": "string"
    },
    "aadclientid_variable": {
      "defaultValue": "",
      "type": "string"
    },
    "sites_ap_wu_func_name": {
      "defaultValue": "",
      "type": "string"
    },
    "vaults_ap_wu_keyvault_name": {
      "defaultValue": "",
      "type": "string"
    }
  },
  "variables": {
    "subscription_id": "[subscription().subscriptionId]",
    "tenant_id": "[subscription().tenantId]"
  },
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Complete_the_Message_In_Queue_For_Everything_Failed": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                  }
                },
                "method": "delete",
                "path": "/@{encodeURIComponent(encodeURIComponent('processing-queue'))}/messages/complete",
                "queries": {
                  "lockToken": "@triggerBody()?['LockToken']",
                  "queueType": "Main",
                  "sessionId": "@triggerBody()?['SessionId']"
                }
              },
              "runAfter": {
                "Send_Everything_Failed_Error_Message_To_Results_Queue": [
                  "Succeeded"
                ]
              }
            },
            "Compose_Everything_Failed_Error_Result_Message": {
              "type": "Compose",
              "inputs": {
                "data": null,
                "errorCode": 4000,
                "errorDetails": "Unhandled Proccessing Error Occured. Please Validate your request information and re-submit if applicable",
                "hasError": "@true",
                "inputId": "@json(decodeBase64(triggerBody()?['ContentData']))?['inputId']",
                "recordId": "@json(decodeBase64(triggerBody()?['ContentData']))?['recordId']",
                "requestType": "@json(decodeBase64(triggerBody()?['ContentData']))?['requestType']"
              },
              "runAfter": {
                "Processing_Scope": [
                  "Failed"
                ]
              }
            },
            "DeleteRecordings_Everything_Failed": {
              "type": "Function",
              "inputs": {
                "body": "@body('CheckCallProgress')",
                "method": "POST",
                "headers": {
                  "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                },
                "function": {
                  "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/DeleteRecordings')]"
                }
              },
              "runAfter": {
                "Complete_the_Message_In_Queue_For_Everything_Failed": [
                  "Succeeded"
                ]
              }
            },
            "Get_AAD_Token": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "https://login.microsoftonline.com/@{variables('AADTenantID')}/oauth2/token",
                "headers": {
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                "body": "grant_type=client_credentials&client_id=@{variables('AADClientID')}&resource=@{variables('AADAudience')}&client_secret=@{body('Get_Vault_Secret')?['value']}"
              },
              "runAfter": {
                "Get_Vault_Secret": [
                  "Succeeded"
                ]
              }
            },
            "Get_Vault_Secret": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "[concat('https://@{variables(''KeyVaultName'')}.vault.azure.net/secrets/', parameters('ap_func_aad_key_secret_name'))]",
                "queries": {
                  "api-version": "2016-10-01"
                },
                "authentication": {
                  "type": "ManagedServiceIdentity",
                  "audience": "https://vault.azure.net"
                }
              },
              "runAfter": {
                "Init_Unique_ID": [
                  "Succeeded"
                ]
              }
            },
            "Init_AAD_Audience": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "AADAudience",
                    "type": "String",
                    "value": "@{parameters('$aadAudience')}"
                  }
                ]
              },
              "runAfter": {
                "Init_AAD_Client_ID": [
                  "Succeeded"
                ]
              }
            },
            "Init_AAD_Client_ID": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "AADClientID",
                    "type": "String",
                    "value": "@{parameters('$aadClientId')}"
                  }
                ]
              },
              "runAfter": {
                "Init_AAD_Tenant_ID": [
                  "Succeeded"
                ]
              }
            },
            "Init_AAD_Tenant_ID": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "AADTenantID",
                    "type": "String",
                    "value": "@{parameters('$aadTenantId')}"
                  }
                ]
              },
              "runAfter": {}
            },
            "Init_Key_Vault_Name": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "KeyVaultName",
                    "type": "String",
                    "value": "@{parameters('$keyVaultName')}"
                  }
                ]
              },
              "runAfter": {
                "Init_AAD_Audience": [
                  "Succeeded"
                ]
              }
            },
            "Init_Request_Payload": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "RequestPayload",
                    "type": "Object",
                    "value": "@json(decodeBase64(triggerBody()?['ContentData']))"
                  }
                ]
              },
              "runAfter": {
                "Init_Key_Vault_Name": [
                  "Succeeded"
                ]
              }
            },
            "Init_Unique_ID": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "UniqueID",
                    "type": "String",
                    "value": "@{guid()}"
                  }
                ]
              },
              "runAfter": {
                "Init_Request_Payload": [
                  "Succeeded"
                ]
              }
            },
            "Processing_Scope": {
              "type": "Scope",
              "actions": {
                "Condition_Call_completed_successfully": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('CheckCallProgress')['statusCode']",
                          200
                        ]
                      },
                      {
                        "equals": [
                          "@body('CheckCallProgress')?['hasError']",
                          "@false"
                        ]
                      },
                      {
                        "equals": [
                          "@body('CheckCallProgress')?['status']",
                          "completed"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Complete_the_message_in_a_queue": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                          }
                        },
                        "method": "delete",
                        "path": "/@{encodeURIComponent(encodeURIComponent('processing-queue'))}/messages/complete",
                        "queries": {
                          "lockToken": "@triggerBody()?['LockToken']",
                          "queueType": "Main",
                          "sessionId": "@triggerBody()?['SessionId']"
                        }
                      },
                      "runAfter": {
                        "DeleteRecordings": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Condition_Check_Call_Duration": {
                      "type": "If",
                      "expression": {
                        "or": [
                          {
                            "greaterOrEquals": [
                              "@body('CheckCallProgress')?['duration']",
                              45
                            ]
                          },
                          {
                            "equals": [
                              "@equals(variables('RequestPayload')?['requestPayload']?['callRetried'],null)",
                              "@false"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Compose_Add_RecordId": {
                          "type": "Compose",
                          "inputs": "@addProperty(addProperty(body('ExtractInfo'),'recordId',variables('RequestPayload')?['recordId']),'inputId',variables('RequestPayload')?['inputId'])",
                          "runAfter": {
                            "ExtractInfo": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Compose_Result_Message": {
                          "type": "Compose",
                          "inputs": "@addProperty(addProperty(outputs('Compose_Add_RecordId'),'recordingSAS',body('PullRecording')?['fullRecordingUrl']),'requestType',variables('RequestPayload')?['requestType'])",
                          "runAfter": {
                            "Compose_Add_RecordId": [
                              "Succeeded"
                            ]
                          }
                        },
                        "ExtractInfo": {
                          "type": "Function",
                          "inputs": {
                            "body": "@body('TranscribeCall')",
                            "method": "POST",
                            "headers": {
                              "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                            },
                            "function": {
                              "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/ExtractInfo')]"
                            }
                          },
                          "runAfter": {
                            "TranscribeCall": [
                              "Succeeded"
                            ]
                          }
                        },
                        "PullRecording": {
                          "type": "Function",
                          "inputs": {
                            "body": "@variables('RequestPayload')",
                            "method": "POST",
                            "headers": {
                              "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                            },
                            "function": {
                              "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/PullRecording')]"
                            }
                          },
                          "runAfter": {}
                        },
                        "Send_extracted_entities_to_result_queue": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                              }
                            },
                            "method": "post",
                            "body": {
                              "SessionId": "0",
                              "ContentData": "@{base64(outputs('Compose_Result_Message'))}",
                              "ContentType": "application/json",
                              "MessageId": "@variables('UniqueID')"
                            },
                            "path": "/@{encodeURIComponent(encodeURIComponent('result-queue'))}/messages",
                            "queries": {
                              "systemProperties": "None"
                            }
                          },
                          "runAfter": {
                            "Compose_Result_Message": [
                              "Succeeded"
                            ]
                          }
                        },
                        "TranscribeCall": {
                          "type": "Function",
                          "inputs": {
                            "body": "@body('PullRecording')",
                            "method": "POST",
                            "headers": {
                              "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                            },
                            "function": {
                              "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/TranscribeCall')]"
                            }
                          },
                          "runAfter": {
                            "PullRecording": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {},
                      "else": {
                        "actions": {
                          "Compose_Call_Retry_Request": {
                            "type": "Compose",
                            "inputs": "@addProperty(variables('RequestPayload')['requestPayload'],'callRetried',true)",
                            "runAfter": {}
                          },
                          "Send_Message_Request_Queue_For_Retry": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                                }
                              },
                              "method": "post",
                              "body": {
                                "SessionId": "0",
                                "ContentData": "@{base64(outputs('Compose_Call_Retry_Request'))}",
                                "ContentType": "application/json"
                              },
                              "path": "/@{encodeURIComponent(encodeURIComponent('request-queue'))}/messages",
                              "queries": {
                                "systemProperties": "None"
                              }
                            },
                            "runAfter": {
                              "Compose_Call_Retry_Request": [
                                "Succeeded"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "DeleteRecordings": {
                      "type": "Function",
                      "inputs": {
                        "body": "@body('CheckCallProgress')",
                        "method": "POST",
                        "headers": {
                          "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                        },
                        "function": {
                          "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/DeleteRecordings')]"
                        }
                      },
                      "runAfter": {
                        "Condition_Check_Call_Duration": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {},
                  "else": {
                    "actions": {
                      "Complete_Error_Message_in_Queue": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                            }
                          },
                          "method": "delete",
                          "path": "/@{encodeURIComponent(encodeURIComponent('processing-queue'))}/messages/complete",
                          "queries": {
                            "lockToken": "@triggerBody()?['LockToken']",
                            "queueType": "Main",
                            "sessionId": "0"
                          }
                        },
                        "runAfter": {
                          "Send_error_message_to_results_queue": [
                            "Succeeded"
                          ]
                        }
                      },
                      "Compose_Error_Result_Message": {
                        "type": "Compose",
                        "inputs": "@addProperty(addProperty(addProperty(body('CheckCallProgress'),'recordId',variables('RequestPayload')?['recordId']),'inputId',variables('RequestPayload')?['inputId']),'requestType',variables('RequestPayload')?['requestType'])",
                        "runAfter": {
                          "DeleteRecordings_In_Error": [
                            "Succeeded",
                            "Failed",
                            "TimedOut"
                          ]
                        }
                      },
                      "DeleteRecordings_In_Error": {
                        "type": "Function",
                        "inputs": {
                          "body": "@json(decodeBase64(triggerBody()?['ContentData']))['callSid']",
                          "method": "POST",
                          "headers": {
                            "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                          },
                          "function": {
                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/DeleteRecordings')]"
                          }
                        },
                        "runAfter": {}
                      },
                      "Send_error_message_to_results_queue": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                            }
                          },
                          "method": "post",
                          "body": {
                            "SessionId": "0",
                            "ContentData": "@{base64(outputs('Compose_Error_Result_Message'))}",
                            "ContentType": "application/json",
                            "MessageId": "@variables('UniqueID')"
                          },
                          "path": "/@{encodeURIComponent(encodeURIComponent('result-queue'))}/messages",
                          "queries": {
                            "systemProperties": "None"
                          }
                        },
                        "runAfter": {
                          "Compose_Error_Result_Message": [
                            "Succeeded"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "Until_Call_Completed": [
                  "Succeeded"
                ]
              }
            },
            "Send_Everything_Failed_Error_Message_To_Results_Queue": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                  }
                },
                "method": "post",
                "body": {
                  "SessionId": "@triggerBody()?['SessionId']",
                  "ContentData": "@{base64(outputs('Compose_Everything_Failed_Error_Result_Message'))}",
                  "ContentType": "application/json"
                },
                "path": "/@{encodeURIComponent(encodeURIComponent('result-queue'))}/messages",
                "queries": {
                  "systemProperties": "None"
                }
              },
              "runAfter": {
                "Compose_Everything_Failed_Error_Result_Message": [
                  "Succeeded"
                ]
              }
            },
            "Until_Call_Completed": {
              "type": "Until",
              "expression": "@equals(body('CheckCallProgress')?['status'], 'completed')",
              "limit": {
                "count": 5,
                "timeout": "PT1H"
              },
              "actions": {
                "CheckCallProgress": {
                  "type": "Function",
                  "inputs": {
                    "body": "@variables('RequestPayload')",
                    "method": "POST",
                    "headers": {
                      "Authorization": "@{concat('Bearer ',body('Get_AAD_Token')?['access_token'])}"
                    },
                    "function": {
                      "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_ap_wu_func_name')), '/functions/CheckCallProgress')]"
                    }
                  },
                  "runAfter": {
                    "Delay": [
                      "Succeeded"
                    ]
                  }
                },
                "Delay": {
                  "type": "Wait",
                  "inputs": {
                    "interval": {
                      "count": 30,
                      "unit": "Second"
                    }
                  },
                  "runAfter": {}
                },
                "Renew_lock_on_the_session_in_a_queue": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                      }
                    },
                    "method": "post",
                    "path": "/@{encodeURIComponent(encodeURIComponent('processing-queue'))}/sessions/@{encodeURIComponent(triggerBody()?['SessionId'])}/renewlock"
                  },
                  "runAfter": {
                    "CheckCallProgress": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_AAD_Token": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "$aadAudience": {
              "defaultValue": "[parameters('aadaudience_variable')]",
              "type": "String"
            },
            "$aadClientId": {
              "defaultValue": "[parameters('aadclientid_variable')]",
              "type": "String"
            },
            "$aadTenantId": {
              "defaultValue": "[variables('tenant_id')]",
              "type": "String"
            },
            "$keyVaultName": {
              "defaultValue": "[parameters('vaults_ap_wu_keyvault_name')]",
              "type": "String"
            }
          },
          "triggers": {
            "When_a_message_is_received_in_a_queue_(peek-lock)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "[concat('@parameters(''$connections'')[''', parameters('servicebus_Connection_Name'), '''][''connectionId'']')]"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent(encodeURIComponent('processing-queue'))}/messages/head/peek",
                "queries": {
                  "queueType": "Main",
                  "sessionId": "0"
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "[parameters('servicebus_Connection_Name')]": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westus2', '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('workflows_ap_process_wu_logicapp_name')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "identity": {
        "type": "SystemAssigned",
        "principalId": "01b2bd16-b6c2-48ac-a379-4cbd744df949",
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
      },
      "apiVersion": "2016-06-01",
      "tags": {
        "displayName": "LogicApp"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('servicebus_Connection_Name')]",
      "location": "westus2",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westus2', '/managedApis/', 'servicebus')]"
        },
        "displayName": "[parameters('servicebus_Connection_Name')]",
        "parameterValues": {
          "connectionString": "[parameters('servicebus_1_connectionString')]"
        }
      }
    }
  ],
  "outputs": {}
}
